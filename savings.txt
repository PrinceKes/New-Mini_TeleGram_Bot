

// Function to fetch referral data from the API and populate the page
async function fetchReferrals() {
  try {
    const userId = getUserIdFromURLOrStorage(); // Get user_id from URL or localStorage
    if (!userId) {
      throw new Error('User ID is missing. Please log in or register.');
    }

    const response = await fetch(`https://sunday-mini-telegram-bot.onrender.com/api/referrals?userId=${userId}`);
    if (!response.ok) {
      throw new Error('Failed to fetch referrals');
    }

    const data = await response.json();
    const referredUsers = data.referred_Users;

    const referralsBox = document.querySelector('.referrals-box');
    referralsBox.innerHTML = '';

    referredUsers.forEach((user) => {
      const userName = user.referredUsername || 'Unknown User';
      const isClaimed = user.isClaimed ? 'Claimed' : 'Unclaimed';

      const userBox = document.createElement('div');
      userBox.classList.add('users-box');

      userBox.innerHTML = `
        <img src="./assets/avatar.png" alt="User Avatar" class="user-avatar" />
        <div class="user-details">
          <h4 class="user-name">${userName}</h4>
          <p class="user-reward">+${user.reward} Rst</p>
          <p class="user-status">Status: ${isClaimed}</p>
        </div>
        ${
          !user.isClaimed
            ? `<button class="claim-button" onClick="claimReward('${user._id}', ${user.reward})">Claim</button>`
            : ''
        }
      `;

      referralsBox.appendChild(userBox);
    });
  } catch (error) {
    console.error('Error fetching or displaying referrals:', error);

    const referralsBox = document.querySelector('.referrals-box');
    referralsBox.innerHTML = `<p class="error-message">Copy and share your link then try again.</p>`;
  }
}







// Function to claim reward for a specific referral
async function claimReward(referralId, rewardAmount) {
  try {
    const userId = getUserIdFromURLOrStorage(); // Get user_id dynamically
    if (!userId) {
      throw new Error('User ID is missing. Please log in or register.');
    }

    const response = await fetch(`https://sunday-mini-telegram-bot.onrender.com/api/referrals/${referralId}/claim`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ userId }),
    });

    const result = await response.json();

    if (response.ok) {
      alert(`Reward claimed successfully! New Balance: ${result.newBalance}`);
      fetchReferrals(); // Refresh referrals after claiming
    } else {
      alert(result.error || 'Failed to claim reward');
    }
  } catch (error) {
    console.error('Error claiming reward:', error);
    alert('An error occurred while claiming the reward. Please try again.');
  }
}

// Function to get the user_id from the URL or localStorage
function getUserIdFromURLOrStorage() {
  const urlParams = new URLSearchParams(window.location.search);
  const userIdFromUrl = urlParams.get('user_id');
  const storedUserId = localStorage.getItem('user_id');

  let user_id = userIdFromUrl || storedUserId;

  if (user_id) {
    localStorage.setItem('user_id', user_id); // Update localStorage with the latest user ID
  }

  return user_id;
}

// Initialize referrals page
document.addEventListener('DOMContentLoaded', fetchReferrals);




// // Function to fetch referral data from the API and populate the page
// async function fetchReferrals(userId) {
//   try {
//     const response = await fetch(`https://sunday-mini-telegram-bot.onrender.com/api/referrals?userId=${userId}`);
    
//     if (!response.ok) {
//       throw new Error('Failed to fetch referrals');
//     }

//     const data = await response.json();
//     const referredUsers = data.referred_Users;

//     const referralsBox = document.querySelector('.referrals-box');
//     referralsBox.innerHTML = '';

//     referredUsers.forEach((user) => {
//       const userBox = document.createElement('div');
//       userBox.classList.add('users-box');

//       const userName = user.referredUsername ? user.referredUsername : 'Unknown User';

//       userBox.innerHTML = `
//         <img src="./assets/avatar.png" alt="User Avatar" class="user-avatar" />
//         <div class="user-details">
//           <h4 class="user-name">${userName}</h4>
//           <p class="user-reward">+${user.reward} Rst</p>
//         </div>
//         <button class="claim-button" onClick="openClaimModal('${user._id}', ${user.reward})">Claim</button>
//       `;

//       referralsBox.appendChild(userBox);
//     });
//   } catch (error) {
//     console.error('Error fetching or displaying referrals:', error);

//     const referralsBox = document.querySelector('.referrals-box');
//     referralsBox.innerHTML = `<p class="error-message">Copy and share your link then try again.</p>`;
//   }
// }

// // Function to get the user_id from the URL or localStorage
// function getUserIdFromURLOrStorage() {
//   const urlParams = new URLSearchParams(window.location.search);
//   const userIdFromUrl = urlParams.get('user_id');
//   const storedUserId = localStorage.getItem('user_id');

//   let user_id = userIdFromUrl || storedUserId;

//   if (user_id) {
//     localStorage.setItem('user_id', user_id);
//   }

//   return user_id;
// }














// Function to open the claim modal
function openClaimModal(referralId, reward) {
  const modal = document.getElementById('claim-modal');
  const claimButton = document.getElementById('claim-reward-button');
  const closeButton = document.getElementById('close-modal-button');

  modal.style.display = 'flex';

  const currentClaimButton = document.querySelector(`button[data-referral-id="${referralId}"]`);

  claimButton.onclick = async function () {
    claimButton.disabled = true;

    await claimReward(referralId, reward, currentClaimButton);

    claimButton.disabled = false;
  };

  closeButton.onclick = function () {
    closeModal();
  };
}





// Function to claim the reward and update the balance
async function claimReward(referralId, reward, currentClaimButton) {
  const userId = getUserIdFromURLOrStorage();

  if (!userId) {
    alert('User ID not found. Please log in again.');
    return;
  }

  try {
    // Update the user's balance in the database
    const response = await fetch(`https://sunday-mini-telegram-bot.onrender.com/api/users/${userId}/balance`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ amount: reward }),
    });

    if (!response.ok) {
      throw new Error('Failed to update balance');
    }

    const data = await response.json();

    // Update the balance in the UI
    const balanceElement = document.getElementById('points');
    if (balanceElement) {
      balanceElement.innerText = `Balance: ${data.balance} Rst`;
    }

    // Disable the "Claim" button after successful claim
    currentClaimButton.disabled = true;
    currentClaimButton.innerText = 'Claimed';

    // Close the modal
    closeModal();
  } catch (error) {
    console.error('Error claiming reward:', error);
    alert('Failed to claim reward. Please try again later.');
  }
}






// Function to close the modal
function closeModal() {
  const modal = document.getElementById('claim-modal');
  modal.style.display = 'none';
}

// Function to load referrals for the current user
async function loadReferrals() {
  const userId = getUserIdFromURLOrStorage();

  if (userId) {
    await fetchReferrals(userId);
  } else {
    console.error('No user_id found in URL or localStorage.');
    const referralsBox = document.querySelector('.referrals-box');
    // referralsBox.innerHTML = `<p class="error-message">User ID is missing. Please log in again.</p>`;
  }
}

// // Trigger the referral loading process
document.addEventListener("DOMContentLoaded", loadReferrals);
